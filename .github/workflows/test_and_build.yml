# .github/workflows/test-and-build.yml
name: Test and Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # Job 1: Test the Rust Server against a real SurrealDB instance
  test-rust-server:
    name: Test Rust Server
    runs-on: ubuntu-latest
    # Use a service container to run SurrealDB
    services:
      surrealdb:
        image: surrealdb/surrealdb:latest
        ports:
          - 8000:8000
        # Start SurrealDB in memory with root user/pass
        options: --user root --pass root mem

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2
      - name: Run Rust server tests
        # Pass the DB connection info from the service to the tests
        env:
          SURREAL_URL: ws://localhost:8000
          SURREAL_USER: root
          SURREAL_PASS: root
        run: cargo test --package rust_server

  # Job 2: Build and Test the Flutter Desktop (Linux) App
  build-and-test-linux:
    name: Build & Test (Linux)
    runs-on: ubuntu-latest
    needs: test-rust-server # Don't run this if server tests fail
    steps:
      - uses: actions/checkout@v4
      # Setup Rust
      - uses: dtolnay/rust-toolchain@stable
      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2
      # Setup Flutter
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.PUB_CACHE }}
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-
      # Build and Test
      - name: Build shared library (.so) for FFI
        run: cargo build --release --package rust_shared
      - name: Install Flutter dependencies
        run: flutter pub get
        working-directory: ./flutter_app
      - name: Run Flutter widget tests
        run: flutter test
        working-directory: ./flutter_app
      - name: Build Flutter Linux app
        run: flutter build linux --release
        working-directory: ./flutter_app

  # Job 3: Build the Flutter Web App
  build-web:
    name: Build (Web)
    runs-on: ubuntu-latest
    needs: test-rust-server # Don't run this if server tests fail
    steps:
      - uses: actions/checkout@v4
      # Setup Rust & Wasm-Pack
      - uses: dtolnay/rust-toolchain@stable
      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2
      - name: Install wasm-pack
        run: cargo install wasm-pack
      # Setup Flutter
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.PUB_CACHE }}
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-
      # Build and Test
      - name: Build shared library (.wasm) for Web
        run: wasm-pack build --target web --out-dir ./flutter_app/web/pkg ./crates/rust_shared
      - name: Install Flutter dependencies
        run: flutter pub get
        working-directory: ./flutter_app
      - name: Build Flutter Web app
        run: flutter build web --release
        working-directory: ./flutter_app