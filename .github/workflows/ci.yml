# .github/workflows/ci.yml
name: Continuous Integration

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # =================================================================
  #  Phase 1: Quick Checks (Run first in parallel)
  # =================================================================
  flutter-check:
    name: Flutter Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Install Flutter dependencies
        run: flutter pub get
        working-directory: ./flutter_app
      - name: Analyze Flutter code
        run: flutter analyze
        working-directory: ./flutter_app

  rust-check:
    name: Rust Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Check Rust formatting
        run: cargo fmt --all -- --check
      - name: Check Rust with Clippy
        run: cargo clippy --all-targets -- -D warnings
      - name: Audit for security vulnerabilities
        run: |
          cargo install cargo-audit
          cargo audit

  # =================================================================
  #  Phase 2: Test & Build (Only runs if checks pass)
  # =================================================================
  test-rust-server:
    name: Test Rust Server
    runs-on: ubuntu-latest
    needs: [rust-check] # <-- This job WAITS for `rust-check` to succeed
    services:
      surrealdb:
        image: surrealdb/surrealdb:latest
        ports:
          - 8000:8000
        options: --user root --pass root mem
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2
      - name: Run Rust server tests
        env:
          SURREAL_URL: ws://localhost:8000
          SURREAL_USER: root
          SURREAL_PASS: root
        run: cargo test --package rust_server

  build-and-test-linux:
    name: Build & Test (Linux)
    runs-on: ubuntu-latest
    needs: [flutter-check, rust-check, test-rust-server] # <-- WAITS for all three jobs
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - run: sudo apt-get update && sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
      - name: Build shared library (.so) for FFI
        run: cargo build --release --package rust_shared
      - name: Install Flutter dependencies
        run: flutter pub get
        working-directory: ./flutter_app
      - name: Run Flutter widget tests
        run: flutter test
        working-directory: ./flutter_app
      - name: Build Flutter Linux app
        run: flutter build linux --release
        working-directory: ./flutter_app

  build-web:
    name: Build (Web)
    runs-on: ubuntu-latest
    needs: [flutter-check, rust-check, test-rust-server] # <-- WAITS for all three jobs
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2
      - name: Install wasm-pack
        run: cargo install wasm-pack
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Build shared library (.wasm) for Web
        run: wasm-pack build --target web --out-dir ./flutter_app/web/pkg ./crates/rust_shared
      - name: Install Flutter dependencies
        run: flutter pub get
        working-directory: ./flutter_app
      - name: Build Flutter Web app
        run: flutter build web --release
        working-directory: ./flutter_app