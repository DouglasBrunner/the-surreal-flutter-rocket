# .github/workflows/main.yml

name: Main CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # Job for the Rust Backend
  ci-backend:
    name: Backend CI (Rust)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            backend/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('backend/**/Cargo.lock') }}

      - name: Audit for security vulnerabilities
        run: |
          cargo install cargo-audit
          cargo audit

      - name: Check formatting
        run: cargo fmt -- --check

      - name: Lint with Clippy
        run: cargo clippy -- -D warnings

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose

  # Job for the Flutter Frontend
  ci-frontend:
    name: Frontend CI (Flutter)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Cache Pub dependencies
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('frontend/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Get Flutter dependencies
        run: flutter pub get
        working-directory: ./frontend

      - name: Analyze Dart code (Lint)
        run: flutter analyze
        working-directory: ./frontend

      - name: Run widget tests
        run: flutter test
        working-directory: ./frontend
      
      - name: Build Flutter App (Web)
        run: flutter build web --release
        working-directory: ./frontend